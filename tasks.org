* BETA RELEASE EXECUTION PLAN
** TODO [#A] define-block PALETTE so that there's a place to pull useful objects from 
*** TODO Hotkey to toggle palette
** TODO [#A] use visual macros to define dialog boxes for stuff in main menu
*** TODO auto mapping between elements of initial-inputs spec, and results vars
** TODO [#A] Dialogs for all basic project save/load stuff
** TODO [#A] project settings dialog for configuring *screen-width* and *resizable* etc
** TODO [#A] Restore basic collision detection functionality
** TODO [#A] Implement basic blocks library
** TODO [#A] Fix as much of the buglist as possible
** TODO [#B] visually indicate lists that can accept
** TODO [#B] Tree-based window abstraction holds any widget
** TODO [#B] later-when checks a condition (whether some other method returns non-nil) (also later-until)
** TODO [#B] System browser for choosing what to define methods on 
** TODO [#B] Ensure full and proper functioning of halos
** TODO [#B] collapsed windows
** TODO [#B] Default location for new dialogs/widgets from menu: the command-line listener
*** TODO "empty trash before save?" dialog
*** TODO "quit without saving?" dialog
** TODO [#B] Better language tutorial projects
** TODO [#B] Audio test widget ("left, right")
** TODO [#B] Explicit menu option to turn off debug handling and get a backtrace
** TODO [#C] buttons on palette
** TODO [#C] incorporate turtle graphics code into base block prototype (for implementing move/turn/point-in-direction 
** TODO [#C] DEFINITION indicator (three dots in a triangle like Therefore, or an EQUAL?)
** TODO [#C] Turn windows-lisp into a cool window widget
** TODO [#C] Basic context-sensitive help
*** TODO explanatory tooltips
** TODO [#C] System browser
** TODO [#C] Make textbox recompile as multi-line string so that defmethod docstrings work naturally
** TODO [#B] collapse halo handle
** TODO [#B] duplicate halo handle
** TODO [#B] defun holding-shift
** TODO [#C] pick up halo handle
** TODO [#C] debug halo handle

* BUGS
** TODO [#B] Fix window resize issues with disappearing text on MacOSX
** TODO [#B] Fix bad circle artifacts on rounded corner patches on OSX
** TODO [#B] Fix custom schema entry labels not being used in 
** TODO [#A] Fix halo handles not working after first move of object w/halo
*** TODO Halo is in front after pickup/putdown? it should hit-test its children
** TODO [#B] Fix bad halo layout on small objects (establish a minimum size)
** TODO [#B] Fix listener history errors
** TODO [#B] Fix crashes with tab and shift-tab navigation
** TODO [#B] Fix crash when error in init file
** TODO [#C] Fix crash on wrong color names
** TODO [#C] Fix error handling: use error message bubbles with X close box and (backtrace) button?
** TODO [#C] Fix Control-E etc not working in textbox
** TODO [#C] Fix not traversing line break with C-f and C-b
** TODO [#C] Fix example numbering

* FEATURES
** TODO [#A] Write standard blocks library
*** move
*** move to 
*** move onto 
*** [#C] glide 
*** change <var> <amount>
*** set <var> <value>
*** get <var>
*** my <var>
*** turn left
*** turn right
*** point at
*** say
*** think <text> <time>
*** display <image>
*** blend
*** opacity
*** show
*** hide
*** move to front
*** play sound
*** play music
*** stop sound
*** [#C] play note/drum/tempo etc
*** [#B] defblock event, the script tests events on them
**** on play
**** on click
**** on event
*** wait
*** loop
*** dotimes
*** dolist
*** send (to some other object explicitly)
*** method
*** while
*** if
**** display true and false
**** use question marks and occasional symbols
*** when 
*** [#C] wait until <condition>
*** stop script
*** stop all
*** touching
*** ask <question>
*** mouse y
*** mouse x
*** mouse down <number>
*** key down <key>
*** distance to
*** common mathematical operations/relations
*** common logical connectives
*** concatenate <strings>
*** [#C] loudness, loud, sensor value
*** random <min> <max>
*** list ops: length, append, add, delete, insert
*** contains
*** [#B] defblock with (introduce local vars) 
*** [#B] defblock defresource (a stand-in reference to a resource)
*** defblock let (with drag-off variable refs)
*** defblock link <--- to another wikipage or something
*** script wiki database (like the file system)
*** [#A] defblock self
****  should resources be full-fledged objects? 
** TODO collapsible windows a-la-squeak
** TODO [#B] Refactor collision detection to enable various types.
*** delegate actual collision detection to method
*** in cell/move and sprite/move , compute whether a move would cause a collision
*** and then only allow the move to go a certain distance. return number moved
*** then "resting contact" will work; the object won't try to move anymore (if gravity.)
*** implement AABB-quadtree? http://en.wikipedia.org/wiki/Quadtree http://hectorgon.blogspot.com/2006/08/regular-grids-vs-aabb-trees-in-games.html
** TODO color code syntax, not semantics?
** TODO GUI for closures
** TODO [#B] PRINTer blocks
** TODO [#A] Start unit-testing
** TODO [#A] Plus-button decorator for lists to add objects (fields, methods, etc)
** TODO [#A] Read me first: F1, then click on any object for help
** TODO [#A] visually indicate clicked send blocks
** TODO [#A] bring menubar and its menus to front when opening menu
** TODO multilayer approach with script over top of world
** TODO [#B] Also show clickable previous commands in listener log
** TODO [#B] an interactive tutorial project
** TODO [#B] escape key hide/show terminals/menus
** TODO [#B] listener history should show only commands?
** TODO [#B] animate text box cursor and show current line / or show textbox border
** TODO [#B] union fields to hold union of %methods and %excluded-fields and so on

** TODO [#B] implement make-process coroutines
** TODO UUID filenames for some objects
** TODO [#B] general purpose resizer/scroller decorator thinger
** TODO [#B] Allow user to move entries easier via yellow triangle tab
** TODO [#B] general process/statemachine thing for distributing moves over many frames, smooth rubberbanding etc

** TODO Win32 build tips

oh, and on windows at least, you'll need to call %gl:reset-gl-pointers
after you set that, when starting the new image you've built if you
want it to work on windows, you'll need to set
%gl::*gl-get-proc-address* I think sdl has a get-proc-address, or you
can bind to the windows one yourself I use #'glfw:get-proc-address , I
add "." and "%CD%" to cffi's foreign directory search list...
(04:20:28 AM) : and just dump them in the folder with the image :)
(04:20:40 AM) : and change the OS working directory, too
** desktop wall morphic http://www.cs.ucsb.edu/~urs/oocsb/self/release/Self-4.0/Tutorial/Morphic/Morphic/Kansas.html
** COOL FEATURE: gnome-do/anything.el style search/operate, for quick access to everything
** TODO [#B] file selector dialog (only choosing from project dir at first)
** TODO [#B] pin toggle button
** TODO [#B] Improve error handling in shell
*** TODO isolate/trap all block errors and display them grayed out with an inspectable error
*** TODO define-method error shell
*** TODO better error handling for menu methods
*** TODO define-method warning shell
*** TODO redirect messages to message bar. optionally fading notifications with widgets in them
** TODO [#B] explicit "save" and "compile" buttons 
** TODO [#B] joystick menu to find connected devices x3
** TODO [#B] standardize on "ABXY" for the face buttons, LB RB LT RT for the shoulder buttons
** TODO [#B] popup tape-flag/balloons to show you where you are, like hints about M-x window
** TODO [#B] Universal access
***  How to handle Translations? keywords in most languages are in English even if comments/variable names are French or Japanese or whatever)
****  translate only meuns?
***  Visual theme-ability for the color-blind and visually-impaired users (larger font, higher contrast etc)
***  Braille keyboard and speech synthesis integration for blind users
** TODO [#B] Bring back old/forms.lisp spreadsheet
***  compilation options
** TODO [#B] Make dialogs for all menu options in file:system.lisp 
** TODO [#B] Fix menu behavior: properly check other menu widgets in menubar hit before menu
** TODO [#B] allow any font size to be requested
** TODO [#B] fix argument blocks not being created (AGAIN)
** TODO [#B] list-scroll-decorator
** TODO [#B] reasonable emacs configuration for ioforms dev (imenu etc)
** TODO [#B] send unfocused input to terminal? 
** TODO [#B] button to add arguments to + etc (just drop onto block list)
** TODO [#C] add generic xbox controller support for analog bumpers (emulate buttons)
** TODO [#C] introduce with-font macro and stop using *block-font* explicitly
** TODO [#C] defface with bold, italic, etc
** TODO [#C] "evaluate" and "evaluate and show" buttons
** TODO [#C] Change submenu ellipsis to a nice triangle
** TODO universal (row,column) ref interface for buffers/blocks
** TODO basic buffer is a free-roaming space a la squeak
** TODO generic proportional and table layouts  
** TODO world implements buffer interface its own way, with grid
** TODO generic buffer similarly 
** TODO general widget embed layout thing. =formatter= --> but instead of rich text, it's all widgets (textboxes + img)
** TODO [#C] duplicate objects / selection 
** TODO [#C] defblock selection 
** TODO [#C] send message to all blocks in selection
** TODO [#C] use turtle to program polygon vertices and stuff, like in fluxus
** TODO [#C] general svg image support
** TODO [#C] ALPHA issues for PNG images
<|3b|> you want 'save color values from transparent pixels', and need to make
       sure the pixels are white with 0 alpha
<|3b|> also, looks like you weren't passing blend to draw-circle from
       draw-solid-circle, not that it matters here  [23:46]
** TODO [#C] automatically generate blocky friend faces with given body/face shapes
** TODO [#C] pretty rubberband movement

* OLDER NOTES

** TODO [#C] XALCYON STORYLINE
***  i'm going to learn some of this: http://en.wikipedia.org/wiki/Speech_Synthesis_Markup_Language
***  go for a straight space fantasy, skip the arecibo-message angle
***  the planet is actually a benevolent female intelligence who announces she is dying by taking on too much mass from the surrounding clouds, which will trigger fusion in her core 
***  so she calls on certain people to safely store her memories in bubbles
***  recursive bubble universes , where you explore her memories and retrieve them
***  female synth voice?
***  bring in sanctuary monks?
***  depth of field mipmapping to color distant objects with atmosphere distance/haze?
***  recovering ancient memory bubbles
***  story dialog buttons like Ultima
***  think about game design / story
***  smooth scrolling to follow player
***  smoother speed changes w/analog stick
***  health bar
***  hot zone bubbles
***  collectible bubbles
***  bubbles that you need to leave flares inside of.
***  discover which bubbles resonate with each other
***  drop flares inside those bubbles

** TODO [#C] Graph UI vmacro notes
   
Say you want a nice interface helping a designer to explore various
choices of values for two variables---such as a function y=f(x), or
perhaps choose a color interactively from a 2D color field (possibly
via the mouse) while seeing corresponding R/G/B values update (and
vice versa when you edit the RGB values individually.) So we want to
make a rectangle with a clickable/draggable point in it, whose X,Y
position reflects the values of the variables, plus axis labels.

You could write a "native" widget to do this with native drawing
commands, but extending that in various ways (to choosing multiple
points, for example) might be harder---whatever the case, if you want
to make a variation or improvement on this widget, the "native" coders
have to do it.

But, assume for the moment that we've got the following prebuilt
visual blocks, with argument or "socket" names listed in parentheses
after the block name.

  sprite(x,y,z,image,...)  a sprite with operations such as
                           "move :north 5 :pixels" and "on-click :x 50 :y 29"

  world(height,width,sprites,...)  a rectangular gameworld where objects can
                                   exist and collide. operations are things like
                                   draw-background() and add-sprite(sprite, x, y,...)
  
  label(x,y,text)          this can be just a specialized sprite() block.

  number(value,format,...)  an editable number widget.

  text(value)               editable plaintext string 

  send(object,message,{arguments})   invoke a method on the OBJECT

  set(name,value)  locally set the variable named NAME to the value
                     VALUE.

  the(name)        find the value of the variable named NAME.
                   graphically, this may be abbreviated *NAME, or by color.

  my(name)         find the value of this object's NAME field.
                   this is distinct from any local variable with that name.

  new(name)        create a new block of the type NAME, i.e. new("number")

  defblock(name,definition)  define a new block in terms of other blocks

  method(name, block, args)   define a method named NAME on the block BLOCK
                   
(As in Scratch, the "sockets" are the places in the block's onscreen
representation that you plug other blocks into.)

I have actually implemented all the prebuilt blocks mentioned, except
for the last two---defblock exists as a Lisp macro to define blocks,
but there isn't yet a visual block CALLED defblock that does this
visually. And similarly with DEFINE-METHOD. But this isn't hard. All
the basics of what I've described above are shown in the youtube demo
I put up, I just need to revise the graphics parts now that I moved to
OpenGL, plus some layout changes.

Anyway, given these blocks, the rough outline of the visual solution,
starting with a blank page:

1. Add a DEFBLOCK to the blank page.
2. Type "point-chooser" into the NAME socket of the DEFBLOCK.
3. Add a blank WORLD to the page. It shows up as a white 256x256 unit
   square by default, but can be resized, change its background image,
   and add sprites using various commands.
4. Add a new SET block. Enter "graph" in the NAME socket.
5. Drag the blank WORLD into the VALUE socket of the SET block.

   (The idea here is that you now have a WORLD object named "graph")

6.  Drag the resulting SET block into the DEFINITION part of the
DEFBLOCK block.

7. Now you have a DEFBLOCK whose body (so far) creates a blank WORLD
   and makes it available as the value of the local variable named
   GRAPH.

8. By steps similar to steps 4-6 above, create a few more SET blocks:

   SET(X, NEW(NUMBER))
   SET(Y, NEW(NUMBER))
   SET(POINT, NEW(SPRITE))

   Add SEND(THE(GRAPH) ADD THE(SPRITE) 0 0) to the main DEFBLOCK, so
   that the graph starts out with the interactive sprite dot in it.

Now, It's probably not hard to make a simple two-column table widget
with the variable names on the left and the values on the right,
instead of having to make each SET statement individually. But you get
the idea---you have something that looks like a dialog box-ish user
interface already, with labels on the left, interactive value widgets
on the right. 

But the graph doesn't yet actually work, so we must continue.

9. Add a SEND block. For the OBJECT (i.e recipient) socket, put in
   THE(POINT), and enter MOVE-TO as the message name. Add THE(X) and
   THE(Y) as the arguments.

   You now have a block which, when triggered, moves the sprite POINT
   to the location given by the values of the local variables X and Y.

   Switching to a Lispy notation, we now have:
 
    (SEND (THE POINT) MOVE-TO (THE X) (THE Y))

10. Add (METHOD UPDATE (THE X)), and as the definition give the SEND
    block from the previous step. 

    And similarly with (METHOD UPDATE (THE Y)).

12. Add (METHOD CLICK (THE POINT)) and give this as a definition: 
       
         (SEND (THE X) SET-VALUE (MY X))
         (SEND (THE Y) SET-VALUE (MY Y))

13. It's clear we could continue on and improve this with label axes
    and such. 

14. It's easier for people to change this defblock's behavior because
    its logic is expressed entirely in blocks. Well, you don't want to
    encourage copy-and-tweak reuse, but on the other hand requiring
    conceptual coordination between everyone on these
    frequently-customized editing tools would be an object-librarian's
    nightmare. Better to err on the side of people adapting the
    available "scripts" to their immediate tasks-at-hand.

** TODO [#C] (defmacro define 
** TODO [#C] allow (setf (^field object) value) ??

** TODO Re-examine "invader tactics" source and see what blocks are required to reimplement it
** TODO re-release "Invader"!



** TODO [#C] GAME IDEA: nested puzzle blox? got to drag your guy through various boxes of different sizes and shapes
***** use recursive collision detection of some kind, to enable boxes to only fit certain things

* Archived Entries
** DONE [#A] rename RUN to EVALUATE
   CLOSED: [2011-07-09 Sat 02:15]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-07-09 Sat 02:16
   :ARCHIVE_FILE: ~/ioforms/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO [#A] Read whitepaper: "Programming as an Experience: The Inspiration for Self"
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-07-20 Wed 23:09
   :ARCHIVE_FILE: ~/ioforms/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#A] fix on-select listener not working to get keystrokes to the prompt
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-12 Fri 16:01
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#A] Fix focus model --- first click/drag does not pull, only after mouseup
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-12 Fri 16:01
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#B] fix erroneous double click of last element when clicking (white background)
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-12 Fri 16:01
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#A] Turn on UNICODE key translation
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-13 Sat 01:04
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** DONE Fix funny unicode characters getting used instead of SDL keys for bindings like RET and BACKSPACE
   CLOSED: [2011-08-14 Sun 05:15]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-14 Sun 05:15
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO fix make-block regression on (list 1 2 3) --> null list
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-14 Sun 06:48
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:

** DONE fix newline not working in textbox
   CLOSED: [2011-08-15 Mon 22:47]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-15 Mon 22:47
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO add *style* variable with flat rect option?
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-16 Tue 17:12
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
*** TODO [#B] use a non-rounded box layout and appearance for program elements, with very thin margins?
*** retain rounded rectangles for UI/workspace/etc
*** TODO [#B] em-dash and en-dash (optionally font-metric-dependent) for uniform declarative layout
** DONE [#A] Fix context-menu: method schema not being found when it's inherited
   CLOSED: [2011-08-21 Sun 23:47]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-21 Sun 23:47
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#A] trigger context menu items with left click, make block with control-click/right-click
   CLOSED: [2011-08-21 Sun 23:47]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-21 Sun 23:47
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO [#B] pop up shell on M-x
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-25 Thu 00:08
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGFIXES
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO ALPHA RELEASE with a few working examples
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-25 Thu 00:08
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGFIXES
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:

** TODO [#B] Use Alt-drag to move objects
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-25 Thu 00:08
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGFIXES
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#B] FIX trash drawing children during drag
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-25 Thu 00:08
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGFIXES
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#B] Fix the way wiki page resources are stored into separate files...
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-25 Thu 00:08
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGFIXES
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO Fix init file name (use blocky-init.lisp or ~/.blocky)
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-26 Fri 23:43
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO Fix command-line cursor alignment
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-26 Fri 23:50
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** DONE Fix being able to drag top-level menus out of menubar
   CLOSED: [2011-08-27 Sat 20:34]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-27 Sat 20:34
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO Fix main menu bar title layout(too tight)
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-27 Sat 21:19
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** DONE [#A] Fix %VALUE not being updated
   CLOSED: [2011-08-27 Sat 22:57]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-27 Sat 22:57
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO [#A] halos
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-28 Sun 22:09
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: CURRENT TASKS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
*** DONE trash (top left)
    CLOSED: [2011-08-28 Sun 10:18]
*** DONE menu
    CLOSED: [2011-08-28 Sun 10:18]
*** DONE resize (bottom right)
    CLOSED: [2011-08-28 Sun 22:09]
*** DONE reference
    CLOSED: [2011-08-28 Sun 22:09]
*** DONE move
    CLOSED: [2011-08-28 Sun 22:09]
** TODO Lightning talk
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 03:08
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
*** TODO hello and welcome 
*** TODO brief demo (smalltalk borrow)
*** TODO copyright notice; trash it with halo
*** TODO listener with history
*** TODO lists of numbers and stuff
*** TODO colors
*** TODO halos for resizing, menus, references
*** TODO turtle
** DONE [#A] Fix listener prompt not laying out after character insertion
   CLOSED: [2011-08-31 Wed 04:11]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 04:38
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#A] Fix STRING not being set properly without quotes
   CLOSED: [2011-08-31 Wed 04:11]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 04:38
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#B] Fix ENTER%%ENTRY being called twice because of ON-LOSE-FOCUS
   CLOSED: [2011-08-31 Wed 04:08]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 04:39
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#B] Fix reference halo dropping new ref in wrong position
   CLOSED: [2011-08-31 Wed 04:38]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 04:39
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#A] Merge sprites into basic block type
   CLOSED: [2011-08-31 Wed 04:11]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 04:39
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN/Complete the core language model (define blocks and methods visually)
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE review vmacs.lisp and get basics working
   CLOSED: [2011-08-31 Wed 09:05]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 09:37
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN/Complete the core language model (define blocks and methods visually)
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#A] Fix list %frozen not working
   CLOSED: [2011-08-31 Wed 06:41]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 09:37
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#A] Fix first drag of object after creating halo causes jump in position
   CLOSED: [2011-08-31 Wed 06:41]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 09:37
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#A] Fix missing labels on defblock's child entries (eval going wrong?)
   CLOSED: [2011-08-31 Wed 06:41]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 09:37
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE make this into a horizontal layout for the main args, vert as-is for the fields (tighter layout)
   CLOSED: [2011-08-31 Wed 20:02]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 20:02
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN/Complete the core language model (define blocks and methods visually)/define block
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO [#A] Fix string entry printing with extra quotes
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 20:02
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#A] Fix layout lags, not updating in list after accept
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-08-31 Wed 20:02
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** DONE define block
   CLOSED: [2011-09-01 Thu 20:36]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-09-01 Thu 20:42
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN/Complete the core language model (define blocks and methods visually)
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE later-do and do-at-time macros evolve to a closure block that sends the supplied method
   CLOSED: [2011-09-02 Fri 17:23]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-09-03 Sat 00:41
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN/simple schedulers: later-do, later-when, later-until
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** DONE [#B] Revise and simplify menus, more like Squeak
   CLOSED: [2011-09-03 Sat 02:47]
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-09-03 Sat 02:48
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: DONE
   :END:
** TODO [#A] complete and test define-method block
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-09-03 Sat 21:21
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BETA RELEASE EXECUTION PLAN
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:
** TODO [#B] Fix can't grab define-block via the labels
   :PROPERTIES:
   :ARCHIVE_TIME: 2011-09-03 Sat 21:22
   :ARCHIVE_FILE: ~/blocky/tasks.org
   :ARCHIVE_OLPATH: BUGS
   :ARCHIVE_CATEGORY: tasks
   :ARCHIVE_TODO: TODO
   :END:

