*** TODO add numbers, strings, and compound phrases to the sidebar dictionary list

*** TODO flesh out generic word-and-body block for things like "define"
**** TODO draw paragraph as a scheme-bricks-style bracket
***** TODO shades of gray for nesting, not color

*** TODO sidebar pops up when you go near right edge, or use mouse wheel
*** TODO x to execute selected word/block
*** TODO control-click to execute block without selecting
*** TODO delete deletes selected block
*** TODO c puts copy of selected block at mouse pointer
*** TODO undo and redo

*** TODO sentence block is mostly invisible itself, small handle
**** TODO tap/drag selects whole sentence by default
**** TODO middle mouse button to override and select by "raw hit"

*** TODO control-r to ro [[horizontal]] tate orientation of selected block
*** TODO merge sentences/bodies when dropping sentence
*** TODO equivalent of scheme's "every-frame"

*** TODO gracefull error handling with pop up notifications


*** TODO check out RodgerTheGreat's Deep Mako game
https://github.com/JohnEarnest/Mako/blob/master/games/Deep/Deep.fs
once you've built maker by running the ant script in the root
of the project you can build and run deep via "./maker games/Deep/Deep.fs --run"
*** DONE be able to blockify  ((DEFINE "") (.....) (....))
    CLOSED: [2013-02-04 Mon 15:25]
    And then get back DEFINE name FOO BAR BAZ END

*** DONE left-drag to move blocks
    CLOSED: [2013-02-04 Mon 15:22]
*** DONE click to select block
    CLOSED: [2013-02-04 Mon 15:23]
*** DONE right click to edit block text (where applicable)
    CLOSED: [2013-02-04 Mon 15:23]
**** DONE selected block highlights in sine oscillating white/gray or color
     CLOSED: [2013-02-04 Mon 15:23]
*** DONE prompt goes back to executing words and showing one stack output.
    CLOSED: [2013-02-03 Sun 22:59]
*** DONE change minibuffer into right side scrollable word/phrase palette
    CLOSED: [2013-02-04 Mon 00:48]
*** DONE alphabetical order dictionary
    CLOSED: [2013-02-04 Mon 00:48]
*** DONE mousewheel capable!
*** DONE improved block appearance with schemebricks-style typing
    CLOSED: [2013-02-04 Mon 15:25]

*** TODO make music with blockyforth ... ambient at first.
*** TODO able to click/grab/edit/copy blockified forth commands
*** TODO [#B] show stack in sidebar
*** TODO consistent set of function keys for executing global words
*** TODO try true fullscreen
*** TODO flash cursor colors for active drop
<dto> and the sidebar could be dynamically changed according to context. such
      as if you ask for the list of available buffers, a series of sentences
      could pop up in the right side
ah i like the idea of Minimizing word defs that you're not editing.
http://www.pawfal.org/dave/index.cgi?Projects/BetablockerDS
http://www.pawfal.org/dave/blog/2012/10/scheme-bricks-2/

http://www.ifwiki.org/index.php/Inform_7_for_Programmers
*** TODO ??? cancel the general buffer editor thing. do it later.
** TODO [#B] INTERACTIVE LIVECODING.
*** TODO how to do ANYTHING in the minibuffer 
*** TODO think about the bottom-up workflow. review the language design.
*** TODO implement SEE to show a definition's body
*** TODO implement AS to change 
*** TODO [#B] add context sensitive help: describe <WORD>
*** TODO sine/cosine
*** TODO [#B] word menu, traditional application menu bar

a robot having (bullets hp) is a block

to initialize a robot do 
0 :hp ! 
10 :bullets !
"robot.png" display 
end

to fire a robot do
bullet new drop 
end

local :bob
robot new :bob ! 
:bob with 20 20 move fire

*** -------------------------------------------------------
*** click the real BOB to insert var reference!

* TODO [#A] create PROGRAM when you click on the background, delete it if nothing was typed


*** TODO [#A] do this at 0,0 when creating a new buffer
**** TODO [#A] AlWAYS-RUN flag makes block immune to PAUSE state, default is NIL but is T for UI stuff
**** TODO [#B] keep minibuffer. 
** TODO [#A] PROGRAM is a widget that can be arranged in the buffer with test objects
** TODO Program widget instantiates as a blinking cursor 

** TODO EXECUTE BUFFERs! to re-do all defs

** TODO show stack and MESSAGE output on screen
*** TODO show top items of STACK in modeline/panel

** TODO [#C] rename add-object/remove-object to insert/delete... a notion of Point
** TODO [#C] words for accessing incoming arguments? not really needed. just list !y !x at the beginning to pop values
** TODO define the block shell as an embeddable richtext block you can type in, emacs-style
**** TODO arrows only nav within object---use control-arrow 
**** TODO ??delete only deletes within an object---use control-delete to "break" the text of the previous block?xs?
**** TODO black text w/o borders
**** TODO anything-el-style completion
**** TODO show the stack, why not?
**** TODO white rounded rectangle background 
**** TODO black text
*** TODO add documentation for words, and a nice dictionary formatter thing

* TODO forthmode. the stack is composed of blocks, and the current buffer line is the stack!
*** TODO can illustrate, showing execution on successive lines
*** http://c2.com/cgi/wiki?ColorForthQuickStart
*** http://concatenative.org/wiki/view/Concatenative%20language
*** prefix concat: http://sparist.github.com/Om/
*** http://concatenative.org/wiki/view/Concatenative%20language


* TODO [#A] IN-ENGINE INTERACTIVE LIVECODING IN FORTH.
CURSOR. can i type words into the buffer anywhere and create stuff? YES
WHOLE window is SHELL
can click existing words to insert them at point??
can run whole buffer
* TODO http://c2.com/cgi/wiki?ForthMacro
http://grobots.sourceforge.net/
* VISUAL PROGRAMMING WITH THE KEYBOARD. visiprog does not require mouse.
*** dialog boxes are hard. instead use keyboard with auto-completion and suggestions like in emacs.
refactor text buffer widget to allow dynamic inline blockification of plain
english text, by default, new typed characters are in "text widget"
but this can be changed, as well as can the creation parameters for
the current block. like Bold Italic.

** TODO combine features from the Listener and text buffer into an emacsy thing
*** TODO simple concatenative syntax, possibly like Forth. look up colorforth, demo tools
*** DONE Review "THINKING FORTH"
    CLOSED: [2013-02-01 Fri 01:54]
*** TODO somehow incorporate red eevstars / linkdmode 
*** DONE but can add LISP parentheses at any time
    CLOSED: [2013-02-01 Fri 01:54]
** DONE [#B] use a macrolet to allow (next-method -->  (apply (get-next-method) ...)
   CLOSED: [2013-02-01 Fri 01:54]

** TODO [#B] Pretty sexy black rounded corner notifications
**** TODO notifications and a "notify" function 
**** TODO smile/frown emoticon status
**** TODO simple ok notification box
**** TODO generic question dialog box shortcut function
** TODO Review GoF design patterns
** TODO review other .org file ideas in repo
** TODO [#B] buttons for toggle pin,freeze


* Archived Entries
** DONE fundamental-mode is the basic mode
   CLOSED: [2013-01-28 Mon 11:17]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-28 Mon 12:17
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
** DONE rename Worlds to Buffers
   CLOSED: [2013-01-28 Mon 11:17]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-28 Mon 12:17
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
** DONE rename world%player to buffer%cursor <--- cursor receives messages
   CLOSED: [2013-01-28 Mon 12:16]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-28 Mon 12:17
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
** DONE fix listener make-block-package issue
   CLOSED: [2013-01-29 Tue 10:07]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-29 Tue 10:08
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
** DONE defining new words
   CLOSED: [2013-01-29 Tue 23:06]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-29 Tue 23:06
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:

** DONE executing single words
   CLOSED: [2013-01-29 Tue 23:06]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-29 Tue 23:06
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
** DONE executing sequences of words (use the lisp reader)
   CLOSED: [2013-01-29 Tue 23:06]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-29 Tue 23:06
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
*** DONE use lisp reader to read embedded lists that are pushed onto stack as a whole
    CLOSED: [2013-01-29 Tue 23:06]

** DONE dictionary of words
   CLOSED: [2013-01-29 Tue 23:06]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-01-29 Tue 23:06
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: DONE
   :END:
** TODO just store forth definitions in object fields, as methods?
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-01 Fri 01:51
   :ARCHIVE_FILE: ~/blocky/modes.org
   :ARCHIVE_CATEGORY: modes
   :ARCHIVE_TODO: TODO
   :END:
** DONE watch fluxus / schemebricks videos.
   CLOSED: [2013-02-03 Sun 05:22]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** DONE define-block word <--- visual syntax
   CLOSED: [2013-02-03 Sun 05:22]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** DONE if a word is dropped onto a word, insert it before the target in the list
   CLOSED: [2013-02-03 Sun 05:22]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** DONE click together words visually
   CLOSED: [2013-02-03 Sun 05:22]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** DONE use existing list UI's, just allow lists of words.
   CLOSED: [2013-02-03 Sun 05:24]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** DONE how to create a named object (buffer local variable)
   CLOSED: [2013-02-03 Sun 02:47]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_OLPATH: INTERACTIVE LIVECODING.
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** DONE how to set a local variable with !
   CLOSED: [2013-02-03 Sun 02:47]
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 05:24
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_OLPATH: INTERACTIVE LIVECODING.
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: DONE
   :END:
** TODO click to highlight word, control-click or right-click to execute
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-02-03 Sun 07:11
   :ARCHIVE_FILE: ~/blocky/livecoding.org
   :ARCHIVE_CATEGORY: livecoding
   :ARCHIVE_TODO: TODO
   :END:

